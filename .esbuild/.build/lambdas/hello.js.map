{
  "version": 3,
  "sources": ["../../../node_modules/deep-object-js/src/isObject.js", "../../../node_modules/deep-object-js/src/get.js", "../../../node_modules/deep-object-js/index.js", "../../../lambdas/hello.ts"],
  "sourcesContent": ["/**\n * Checks if `obj` is object. \n * A value is object if it's not `null`, Function or Array\n *\n * @param {*} obj The value to check.\n * @returns {boolean} Returns `true` if `obj` is object, else `false`.\n * @example\n *\n * isObject({ a: '1', b: '2', c: '3' }) // => true\n *\n * isObject([1, 2, 3]) // => false\n *\n * isObject(Function) // => false\n *\n * isObject(null) // => false\n */\n\nconst isObject = (obj) => {\n    return typeof obj === 'object' && obj === Object(obj) && !Array.isArray(obj);\n}\n\nmodule.exports = {\n    isObject\n};", "const { isObject } = require('./isObject');\n\nconst _mountPathList = (path) => {\n    if (typeof path !== 'string') throw new Error('path is not a string')\n    return path.replace(/\\[(\\d+)]/g, '.$1').split('.')\n};\n\nconst get = (obj, path, def) => {\n    try {\n        if (!isObject(obj)) throw new Error('object is not accepted')\n        let pathList = _mountPathList(path);\n        let value = (pathList.every(step => (obj = obj[step]) !== undefined)) ? obj : def;\n        return value;\n    } catch (err) {\n        return (def !== undefined) ? def : undefined;\n    }\n}\n\nmodule.exports = {\n    get,\n    _mountPathList\n}", "const { get } = require('./src/get');\nconst { isObject } = require('./src/isObject');\n\nmodule.exports = {\n    get,\n    isObject\n}", "import { APIGatewayEvent, APIGatewayProxyResult } from \"aws-lambda\"\n\nimport { get as getParamsFromEvent } from \"deep-object-js\"\n\nexport const handler = async (\n  event: APIGatewayEvent\n):Promise<APIGatewayProxyResult> => {  \n\n  const name = getParamsFromEvent(event, \"pathParameters.name\")\n\n  return {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: `Hello ${name ?? \"World\"}!`,\n    })\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,yDAAAA,SAAA;AAiBA,QAAM,WAAW,CAAC,QAAQ;AACtB,aAAO,OAAO,QAAQ,YAAY,QAAQ,OAAO,GAAG,KAAK,CAAC,MAAM,QAAQ,GAAG;AAAA,IAC/E;AAEA,IAAAA,QAAO,UAAU;AAAA,MACb;AAAA,IACJ;AAAA;AAAA;;;ACvBA;AAAA,oDAAAC,SAAA;AAAA,QAAM,EAAE,SAAS,IAAI;AAErB,QAAM,iBAAiB,CAAC,SAAS;AAC7B,UAAI,OAAO,SAAS;AAAU,cAAM,IAAI,MAAM,sBAAsB;AACpE,aAAO,KAAK,QAAQ,aAAa,KAAK,EAAE,MAAM,GAAG;AAAA,IACrD;AAEA,QAAM,MAAM,CAAC,KAAK,MAAM,QAAQ;AAC5B,UAAI;AACA,YAAI,CAAC,SAAS,GAAG;AAAG,gBAAM,IAAI,MAAM,wBAAwB;AAC5D,YAAI,WAAW,eAAe,IAAI;AAClC,YAAI,QAAS,SAAS,MAAM,WAAS,MAAM,IAAI,IAAI,OAAO,MAAS,IAAK,MAAM;AAC9E,eAAO;AAAA,MACX,SAAS,KAAP;AACE,eAAQ,QAAQ,SAAa,MAAM;AAAA,MACvC;AAAA,IACJ;AAEA,IAAAA,QAAO,UAAU;AAAA,MACb;AAAA,MACA;AAAA,IACJ;AAAA;AAAA;;;ACrBA;AAAA,kDAAAC,SAAA;AAAA,QAAM,EAAE,IAAI,IAAI;AAChB,QAAM,EAAE,SAAS,IAAI;AAErB,IAAAA,QAAO,UAAU;AAAA,MACb;AAAA,MACA;AAAA,IACJ;AAAA;AAAA;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAEA,4BAA0C;AAEnC,IAAM,UAAU,OACrB,UACkC;AAElC,QAAM,WAAO,sBAAAC,KAAmB,OAAO,qBAAqB;AAE5D,SAAO;AAAA,IACL,YAAY;AAAA,IACZ,MAAM,KAAK,UAAU;AAAA,MACnB,SAAS,SAAS,QAAQ;AAAA,IAC5B,CAAC;AAAA,EACH;AACF;",
  "names": ["module", "module", "module", "getParamsFromEvent"]
}
